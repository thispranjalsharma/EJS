<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Your Posts</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Futura:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Futura", "Arial", sans-serif;
        background-color: #f8f9fa;
        color: #333;
        line-height: 1.6;
      }

      .posts-page {
        max-width: 1200px;
        margin: 30px auto;
        padding: 0 20px;
      }

      .page-header {
        text-align: center;
        margin-bottom: 40px;
        position: relative;
      }

      .page-title {
        font-size: 32px;
        font-weight: 700;
        color: #333;
        margin-bottom: 10px;
        letter-spacing: -0.5px;
      }

      .page-subtitle {
        font-size: 16px;
        color: #666;
        font-weight: 400;
      }

      .title-decoration {
        width: 80px;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2);
        margin: 20px auto;
        border-radius: 2px;
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0%,
        100% {
          opacity: 1;
        }
        50% {
          opacity: 0.7;
        }
      }

      .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
      }

      .post-card {
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        border: 1px solid rgba(0, 0, 0, 0.05);
        animation: fadeInUp 0.6s ease-out forwards;
        opacity: 0;
        transform: translateY(20px);
      }

      @keyframes fadeInUp {
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .post-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
      }

      .post-header {
        display: flex;
        align-items: center;
        padding: 15px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        background: linear-gradient(
          135deg,
          rgba(102, 126, 234, 0.05) 0%,
          rgba(118, 75, 162, 0.05) 100%
        );
      }

      .post-user-img {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #667eea;
        margin-right: 12px;
        transition: all 0.3s ease;
      }

      .post-card:hover .post-user-img {
        transform: scale(1.1);
        border-color: #764ba2;
      }

      .post-user-info {
        flex: 1;
      }

      .post-user-name {
        font-weight: 600;
        font-size: 15px;
        color: #333;
        margin-bottom: 2px;
      }

      .post-date {
        font-size: 12px;
        color: #999;
        font-weight: 500;
      }

      .post-menu {
        color: #999;
        cursor: pointer;
        padding: 5px;
        border-radius: 50%;
        transition: all 0.3s ease;
      }

      .post-menu:hover {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
      }

      .post-image-container {
        position: relative;
        width: 100%;
        padding-top: 100%; /* 1:1 Aspect Ratio */
        overflow: hidden;
        background: #f8f9fa;
      }

      .post-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
      }

      .post-card:hover .post-image {
        transform: scale(1.05);
      }

      .post-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          135deg,
          rgba(102, 126, 234, 0.8) 0%,
          rgba(118, 75, 162, 0.8) 100%
        );
        opacity: 0;
        transition: opacity 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 18px;
        font-weight: 600;
      }

      .post-card:hover .post-overlay {
        opacity: 1;
      }

      .post-content {
        padding: 15px;
      }

      .post-caption {
        font-size: 14px;
        line-height: 1.5;
        color: #333;
        margin-bottom: 10px;
      }

      .post-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 15px 15px;
      }

      .post-stats {
        display: flex;
        gap: 15px;
      }

      .stat-item {
        display: flex;
        align-items: center;
        gap: 5px;
        color: #666;
        font-size: 13px;
        cursor: pointer;
        transition: color 0.3s ease;
      }

      .stat-item:hover {
        color: #667eea;
      }

      .stat-icon {
        font-size: 16px;
      }

      .post-options {
        position: relative;
      }

      .options-btn {
        background: none;
        border: none;
        color: #999;
        cursor: pointer;
        padding: 5px;
        border-radius: 50%;
        transition: all 0.3s ease;
      }

      .options-btn:hover {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
      }

      .empty-state {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        margin: 40px auto;
        max-width: 500px;
      }

      .empty-icon {
        font-size: 60px;
        margin-bottom: 20px;
        color: #ddd;
      }

      .empty-title {
        font-size: 24px;
        font-weight: 600;
        color: #333;
        margin-bottom: 10px;
      }

      .empty-text {
        font-size: 16px;
        color: #666;
        margin-bottom: 25px;
      }

      .create-post-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
      }

      .create-post-btn:hover {
        background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        color: white;
        text-decoration: none;
      }

      /* Animation delays for staggered loading */
      .post-card:nth-child(1) {
        animation-delay: 0.1s;
      }
      .post-card:nth-child(2) {
        animation-delay: 0.2s;
      }
      .post-card:nth-child(3) {
        animation-delay: 0.3s;
      }
      .post-card:nth-child(4) {
        animation-delay: 0.4s;
      }
      .post-card:nth-child(5) {
        animation-delay: 0.5s;
      }
      .post-card:nth-child(6) {
        animation-delay: 0.6s;
      }
      .post-card:nth-child(7) {
        animation-delay: 0.7s;
      }
      .post-card:nth-child(8) {
        animation-delay: 0.8s;
      }
      .post-card:nth-child(9) {
        animation-delay: 0.9s;
      }

      /* Responsive design */
      @media (max-width: 768px) {
        .posts-grid {
          grid-template-columns: 1fr;
          gap: 20px;
        }

        .posts-page {
          padding: 0 15px;
        }

        .page-title {
          font-size: 28px;
        }

        .post-card {
          margin: 0 auto;
          max-width: 400px;
        }
      }

      @media (max-width: 480px) {
        .page-title {
          font-size: 24px;
        }

        .post-header {
          padding: 12px;
        }

        .post-content {
          padding: 12px;
        }

        .post-actions {
          padding: 0 12px 12px;
        }
      }

      /* Loading skeleton */
      .skeleton {
        background: linear-gradient(
          90deg,
          #f0f0f0 25%,
          #e0e0e0 50%,
          #f0f0f0 75%
        );
        background-size: 200% 100%;
        animation: shimmer 1.5s infinite;
      }

      @keyframes shimmer {
        0% {
          background-position: -200% 0;
        }
        100% {
          background-position: 200% 0;
        }
      }

      /* Hover effects */
      .post-card::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2);
        transform: scaleX(0);
        transition: transform 0.3s ease;
        z-index: 1;
      }

      .post-card:hover::before {
        transform: scaleX(1);
      }
    </style>
  </head>
  <body>
    <%-include("__header.ejs") %>

    <div class="posts-page">
      <div class="page-header">
        <h1 class="page-title">Your Posts</h1>
        <p class="page-subtitle">Manage and view all your uploaded content</p>
        <div class="title-decoration"></div>
      </div>

      <% if (posts && posts.length > 0) { %>
      <div class="posts-grid">
        <% posts.forEach((post, index) => { %>
        <div class="post-card">
          <div class="post-header">
            <img
              src="/user_post/<%= currentUser.profile %>"
              class="post-user-img"
              alt="Your profile"
              onerror="this.src='/default-profile.png'"
            />
            <div class="post-user-info">
              <div class="post-user-name"><%= currentUser.name %></div>
              <div class="post-date" data-time="<%= post.created_at %>">
                Loading...
              </div>
            </div>
            <div class="post-menu">⋯</div>
          </div>

          <div class="post-image-container">
            <img
              src="/post_uploads/<%= post.image %>"
              class="post-image"
              alt="<%= post.caption || 'Post image' %>"
              onerror="this.src='/default.png'"
            />
            <div class="post-overlay">
              <span>View Post</span>
            </div>
          </div>

          <div class="post-content">
            <div class="post-caption">
              <% if (post.caption && post.caption.trim()) { %> <%= post.caption
              %> <% } else { %>
              <em style="color: #999">No caption</em>
              <% } %>
            </div>
          </div>

          <div class="post-actions">
            <div class="post-stats">
              <div class="stat-item">
                <span class="stat-icon">❤️</span>
                <span>0</span>
              </div>
              <div class="stat-item">
                <span class="stat-icon">💬</span>
                <span>0</span>
              </div>
              <div class="stat-item">
                <span class="stat-icon">👁️</span>
                <span>0</span>
              </div>
            </div>
          </div>
        </div>
        <% }) %>
      </div>
      <% } else { %>
      <div class="empty-state">
        <div class="empty-icon">📷</div>
        <h2 class="empty-title">No Posts Yet</h2>
        <p class="empty-text">
          You haven't uploaded any posts yet. Start sharing your moments with
          the world!
        </p>
        <a href="/user/upload-post" class="create-post-btn"
          >Create Your First Post</a
        >
      </div>
      <% } %>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Format all .post-date values
        document.querySelectorAll(".post-date").forEach((el) => {
          const rawTime = el.getAttribute("data-time");
          if (rawTime) {
            el.textContent = formatTime(rawTime);
          }
        });

        // existing handlers...
        document.querySelectorAll(".post-menu").forEach((menu, index) => {
          menu.addEventListener("click", () => {
            showPostOptions(index);
          });
        });
      });

      // Format time function
      function formatTime(dateString) {
        const date = new Date(dateString);
        const now = new Date();
        const diffMs = now - date;
        const diffSec = Math.floor(diffMs / 1000);
        const diffMin = Math.floor(diffSec / 60);
        const diffHour = Math.floor(diffMin / 60);
        const diffDay = Math.floor(diffHour / 24);

        if (diffDay > 7) {
          return date.toLocaleDateString();
        } else if (diffDay > 0) {
          return `${diffDay}d ago`;
        } else if (diffHour > 0) {
          return `${diffHour}h ago`;
        } else if (diffMin > 0) {
          return `${diffMin}m ago`;
        } else {
          return "Just now";
        }
      }

      // Show post options
      function showPostOptions(index) {
        // You can implement a dropdown menu or modal here
        console.log("Show options for post", index);
        // Example: show edit/delete options
      }

      // Add click handlers for post interactions
      document.addEventListener("DOMContentLoaded", function () {
        // Add click handlers for stats
        document.querySelectorAll(".stat-item").forEach((item) => {
          item.addEventListener("click", function () {
            // Handle stat clicks (likes, comments, views)
            console.log("Stat clicked:", this.textContent.trim());
          });
        });

        // Add click handlers for post overlay
        document.querySelectorAll(".post-overlay").forEach((overlay) => {
          overlay.addEventListener("click", function () {
            // Handle post view
            console.log("View post clicked");
          });
        });

        // Lazy loading for images
        const images = document.querySelectorAll(".post-image");
        const imageObserver = new IntersectionObserver((entries, observer) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const img = entry.target;
              img.style.opacity = "1";
              observer.unobserve(img);
            }
          });
        });

        images.forEach((img) => {
          img.style.opacity = "0";
          img.style.transition = "opacity 0.3s ease";
          imageObserver.observe(img);

          img.onload = function () {
            this.style.opacity = "1";
          };
        });
      });
    </script>
  </body>
</html>
