<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User Profile</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Futura:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <%-include("__bootstrap.ejs")%>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Futura", "Arial", sans-serif;
        background-color: #f8f9fa;
        color: #333;
        line-height: 1.6;
      }

      .profile-page {
        max-width: 1000px;
        margin: 30px auto;
        padding: 0 20px;
      }

      .profile-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 20px;
        padding: 40px;
        color: white;
        position: relative;
        overflow: hidden;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
        animation: fadeIn 0.8s ease-out;
      }

      .profile-header::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23ffffff' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E");
        opacity: 0.3;
        z-index: 0;
      }

      .profile-content {
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        gap: 30px;
      }

      .profile-image-container {
        position: relative;
      }

      .profile-image {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
        border: 4px solid rgba(255, 255, 255, 0.8);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
      }

      .profile-image:hover {
        transform: scale(1.05);
        border-color: white;
      }

      .profile-edit-overlay {
        position: absolute;
        bottom: 0;
        right: 0;
        background: rgba(0, 0, 0, 0.6);
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 18px;
        opacity: 0;
        transition: all 0.3s ease;
      }

      .profile-image-container:hover .profile-edit-overlay {
        opacity: 1;
      }

      .profile-details {
        flex: 1;
      }

      .profile-name {
        font-size: 32px;
        font-weight: 700;
        margin-bottom: 5px;
        letter-spacing: -0.5px;
      }

      .profile-info {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 15px;
      }

      .info-item {
        display: flex;
        align-items: center;
        gap: 8px;
      }

      .info-icon {
        font-size: 18px;
        opacity: 0.8;
      }

      .info-text {
        font-size: 16px;
        font-weight: 500;
      }

      .profile-stats {
        display: flex;
        gap: 30px;
        margin-top: 20px;
      }

      .stat-item {
        text-align: center;
      }

      .stat-value {
        font-size: 24px;
        font-weight: 700;
      }

      .stat-label {
        font-size: 14px;
        opacity: 0.8;
      }

      .profile-actions {
        margin-top: 20px;
        display: flex;
        gap: 15px;
      }

      .action-btn {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        padding: 10px 20px;
        border-radius: 30px;
        color: white;
        font-weight: 600;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.3s ease;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.1);
      }

      .action-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
      }

      .action-btn.primary {
        background: white;
        color: #667eea;
      }

      .action-btn.primary:hover {
        background: rgba(255, 255, 255, 0.9);
      }

      .profile-forms {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 30px;
        margin-top: 30px;
      }

      .form-card {
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        animation: slideUp 0.6s ease-out forwards;
        opacity: 0;
        transform: translateY(20px);
      }

      .profile-upload-card {
        animation-delay: 0.2s;
      }

      .post-upload-card {
        animation-delay: 0.4s;
      }

      @keyframes slideUp {
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .form-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
      }

      .form-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        position: relative;
        overflow: hidden;
      }

      .form-header h3 {
        font-size: 20px;
        font-weight: 600;
        margin: 0;
        position: relative;
        z-index: 1;
      }

      .form-header::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23ffffff' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E");
        opacity: 0.3;
      }

      .form-body {
        padding: 25px;
      }

      .form-group {
        margin-bottom: 20px;
      }

      .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
        color: #333;
        font-size: 15px;
      }

      .form-control {
        width: 100%;
        padding: 12px 15px;
        border: 2px solid #e1e5e9;
        border-radius: 12px;
        font-size: 15px;
        font-family: "Futura", "Arial", sans-serif;
        transition: all 0.3s ease;
        background: #f9f9f9;
      }

      .form-control:focus {
        border-color: #667eea;
        outline: none;
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.1);
        background: white;
      }

      .file-input-wrapper {
        position: relative;
        overflow: hidden;
        display: inline-block;
        cursor: pointer;
      }

      .file-input-wrapper input[type="file"] {
        position: absolute;
        left: 0;
        top: 0;
        opacity: 0;
        cursor: pointer;
        width: 100%;
        height: 100%;
      }

      .file-input-button {
        display: inline-block;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 12px 20px;
        border-radius: 12px;
        font-weight: 500;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
      }

      .file-input-wrapper:hover .file-input-button {
        background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.2);
      }

      .file-name {
        margin-top: 8px;
        font-size: 14px;
        color: #666;
      }

      .submit-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-block;
        text-align: center;
        width: auto;
      }

      .submit-btn:hover {
        background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
      }

      .preview-container {
        margin-top: 15px;
        text-align: center;
      }

      .image-preview {
        max-width: 100%;
        max-height: 200px;
        border-radius: 10px;
        display: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      }

      /* Animations */
      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }

      /* Responsive design */
      @media (max-width: 768px) {
        .profile-content {
          flex-direction: column;
          text-align: center;
        }

        .profile-info {
          justify-content: center;
        }

        .profile-stats {
          justify-content: center;
        }

        .profile-actions {
          justify-content: center;
        }

        .profile-forms {
          grid-template-columns: 1fr;
        }

        .profile-header {
          padding: 30px 20px;
        }
      }

      /* Loading states */
      .loading {
        position: relative;
        pointer-events: none;
      }

      .loading::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
        border-radius: inherit;
      }

      .loading::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 30px;
        height: 30px;
        border: 3px solid rgba(102, 126, 234, 0.3);
        border-top: 3px solid #667eea;
        border-radius: 50%;
        z-index: 11;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        0% {
          transform: translate(-50%, -50%) rotate(0deg);
        }
        100% {
          transform: translate(-50%, -50%) rotate(360deg);
        }
      }

      /* Success message */
      .success-message {
        background: linear-gradient(135deg, #4ade80, #22c55e);
        color: white;
        padding: 15px;
        border-radius: 12px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
        animation: slideDown 0.5s ease-out forwards;
        transform: translateY(-20px);
        opacity: 0;
        box-shadow: 0 5px 15px rgba(74, 222, 128, 0.2);
      }

      @keyframes slideDown {
        to {
          transform: translateY(0);
          opacity: 1;
        }
      }

      .success-icon {
        font-size: 20px;
      }

      .success-text {
        font-weight: 500;
        flex: 1;
      }

      .close-btn {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
        font-size: 20px;
        opacity: 0.8;
        transition: opacity 0.3s ease;
      }

      .close-btn:hover {
        opacity: 1;
      }
    </style>
  </head>
  <body>
    <!-- header -->
    <%-include("__header.ejs") %>

    <div class="profile-page">
      <!-- Profile Header -->
      <div class="profile-header">
        <div class="profile-content">
          <div class="profile-image-container">
            <img
              src="/user_post/<%= currentUser.profile %>"
              alt="Profile Picture"
              class="profile-image"
              id="profileImage"
              style="width: 200px; height: 200px"
              onerror="this.src='/default-profile.png'"
            />
            <div
              class="profile-edit-overlay"
              onclick="document.getElementById('profileUploadBtn').click()"
            >
              ✏️
            </div>
          </div>

          <div class="profile-details">
            <h1 class="profile-name"><%= currentUser.name %></h1>

            <div class="profile-info">
              <div class="info-item">
                <span class="info-icon">✉️</span>
                <span class="info-text"><%= currentUser.email %></span>
              </div>
              <div class="info-item">
                <span class="info-icon">📱</span>
                <span class="info-text"><%= currentUser.phone %></span>
              </div>
            </div>

            <div class="profile-stats">
              <div class="stat-item">
                <div class="stat-value">0</div>
                <div class="stat-label">Posts</div>
              </div>
              <div class="stat-item">
                <div class="stat-value">0</div>
                <div class="stat-label">Followers</div>
              </div>
              <div class="stat-item">
                <div class="stat-value">0</div>
                <div class="stat-label">Following</div>
              </div>
            </div>

            <div class="profile-actions">
              <!-- <button class="action-btn primary">Edit Profile</button> -->
              <button class="action-btn">Share Profile</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Success Message (hidden by default) -->
      <div id="successMessage" class="success-message" style="display: none">
        <span class="success-icon">✅</span>
        <span class="success-text" id="successText"
          >Profile updated successfully!</span
        >
        <button class="close-btn" onclick="hideSuccessMessage()">×</button>
      </div>

      <!-- Profile Forms -->
      <div class="profile-forms">
        <!-- Profile Upload Form -->
        <div class="form-card profile-upload-card">
          <div class="form-header">
            <h3>Update Profile Picture</h3>
          </div>
          <div class="form-body">
            <form
              id="uploadForm"
              action="/user/profile"
              method="post"
              enctype="multipart/form-data"
            >
              <div class="form-group">
                <label class="form-label">Choose Profile Image</label>
                <div class="file-input-wrapper">
                  <button class="file-input-button" type="button">
                    Select Image
                  </button>
                  <input
                    type="file"
                    name="profile"
                    id="profileUploadBtn"
                    accept="image/*"
                    onchange="previewProfileImage(event)"
                  />
                </div>
                <div class="file-name" id="profileFileName"></div>
                <div class="preview-container">
                  <img
                    src="/placeholder.svg"
                    alt="Profile Preview"
                    class="image-preview"
                    id="profilePreview"
                  />
                </div>
              </div>

              <div class="form-group">
                <button type="submit" class="submit-btn" id="profileSubmitBtn">
                  Update Profile
                </button>
              </div>
            </form>
          </div>
        </div>

        <!-- Post Upload Form -->
        <div class="form-card post-upload-card">
          <div class="form-header">
            <h3>Create New Post</h3>
          </div>
          <div class="form-body">
            <form
              id="postForm"
              action="/user/upload-post"
              method="POST"
              enctype="multipart/form-data"
            >
              <div class="form-group">
                <label class="form-label">Choose Post Image</label>
                <div class="file-input-wrapper">
                  <button class="file-input-button" type="button">
                    Select Image
                  </button>
                  <input
                    type="file"
                    name="postImage"
                    id="postImage"
                    accept="image/*"
                    required
                    onchange="previewPostImage(event)"
                  />
                </div>
                <div class="file-name" id="postFileName"></div>
                <div class="preview-container">
                  <img
                    src="/placeholder.svg"
                    alt="Post Preview"
                    class="image-preview"
                    id="postPreview"
                  />
                </div>
              </div>

              <div class="form-group">
                <label for="caption" class="form-label">Caption</label>
                <input
                  type="text"
                  class="form-control"
                  name="caption"
                  id="caption"
                  placeholder="Write a caption for your post..."
                />
              </div>

              <div class="form-group">
                <button type="submit" class="submit-btn" id="postSubmitBtn">
                  Upload Post
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script>
      // Profile image preview
      function previewProfileImage(event) {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          const preview = document.getElementById("profilePreview");
          const fileName = document.getElementById("profileFileName");

          reader.onload = function (e) {
            preview.src = e.target.result;
            preview.style.display = "block";
          };

          reader.readAsDataURL(file);
          fileName.textContent = file.name;
        }
      }

      // Post image preview
      function previewPostImage(event) {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          const preview = document.getElementById("postPreview");
          const fileName = document.getElementById("postFileName");

          reader.onload = function (e) {
            preview.src = e.target.result;
            preview.style.display = "block";
          };

          reader.readAsDataURL(file);
          fileName.textContent = file.name;
        }
      }

      // Show success message
      function showSuccessMessage(message) {
        const successMessage = document.getElementById("successMessage");
        const successText = document.getElementById("successText");

        successText.textContent = message;
        successMessage.style.display = "flex";

        // Auto hide after 5 seconds
        setTimeout(hideSuccessMessage, 5000);
      }

      // Hide success message
      function hideSuccessMessage() {
        const successMessage = document.getElementById("successMessage");
        successMessage.style.display = "none";
      }

      // Profile upload form submission
      const profileForm = document.getElementById("uploadForm");
      profileForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const submitBtn = document.getElementById("profileSubmitBtn");
        submitBtn.disabled = true;
        submitBtn.parentElement.classList.add("loading");

        const formData = new FormData(profileForm);

        try {
          const res = await fetch("/user/profile", {
            method: "POST",
            body: formData,
          });

          const data = await res.json();

          if (data.success) {
            const expiry = Date.now() + 24 * 60 * 60 * 1000; // 1 day
            localStorage.setItem(
              "auth",
              JSON.stringify({ user: data.user, expiry })
            );

            // Update profile image
            const profileImage = document.getElementById("profileImage");
            profileImage.src = `/user_post/${
              data.user.profile
            }?t=${new Date().getTime()}`; // Add timestamp to prevent caching

            // Show success message
            showSuccessMessage("Profile picture updated successfully!");

            // Reset form
            document.getElementById("profilePreview").style.display = "none";
            document.getElementById("profileFileName").textContent = "";
          } else {
            showSuccessMessage(data.message || "Failed to update profile");
          }
        } catch (error) {
          showSuccessMessage("An error occurred. Please try again.");
        } finally {
          submitBtn.disabled = false;
          submitBtn.parentElement.classList.remove("loading");
        }
      });

      // Post upload form submission
      const postForm = document.getElementById("postForm");
      postForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const submitBtn = document.getElementById("postSubmitBtn");
        submitBtn.disabled = true;
        submitBtn.parentElement.classList.add("loading");

        const formData = new FormData(postForm);

        try {
          const res = await fetch("/user/upload-post", {
            method: "POST",
            body: formData,
          });

          const data = await res.json();

          if (data.success) {
            // Show success message
            showSuccessMessage("Post uploaded successfully!");

            // Reset form
            postForm.reset();
            document.getElementById("postPreview").style.display = "none";
            document.getElementById("postFileName").textContent = "";
          } else {
            showSuccessMessage(data.message || "Failed to upload post");
          }
        } catch (error) {
          showSuccessMessage("An error occurred. Please try again.");
        } finally {
          submitBtn.disabled = false;
          submitBtn.parentElement.classList.remove("loading");
        }
      });
    </script>
  </body>
</html>
